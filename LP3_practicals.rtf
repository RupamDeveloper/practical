{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch13\stshfloch0\stshfhich0\stshfbi31507\deflang16393\deflangfe16393\themelang16393\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}
{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f13\fbidi \fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt SimSun};}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri{\*\falt Calibri};}{\f43\fbidi \fnil\fcharset0\fprq0{\*\panose 00000000000000000000}sans-serif{\*\falt Segoe Print};}
{\f44\fbidi \fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Consolas{\*\falt Consolas};}{\f130\fbidi \fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}
{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}
{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}
{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}
{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri{\*\falt Calibri};}{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}
{\f1143\fbidi \froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}{\f1144\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}
{\f1146\fbidi \froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\f1147\fbidi \froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}
{\f1148\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}{\f1149\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}
{\f1150\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}{\f1151\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}{\f1163\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}
{\f1164\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}{\f1166\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f1167\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f1168\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f1169\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f1170\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f1171\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}
{\f1275\fbidi \fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}{\f1483\fbidi \froman\fcharset238\fprq2 Cambria Math CE;}{\f1484\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}{\f1486\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}
{\f1487\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}{\f1490\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;}{\f1491\fbidi \froman\fcharset163\fprq2 Cambria Math (Vietnamese);}{\f1513\fbidi \fswiss\fcharset238\fprq2 Calibri CE{\*\falt Calibri};}
{\f1514\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr{\*\falt Calibri};}{\f1516\fbidi \fswiss\fcharset161\fprq2 Calibri Greek{\*\falt Calibri};}{\f1517\fbidi \fswiss\fcharset162\fprq2 Calibri Tur{\*\falt Calibri};}
{\f1518\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew){\*\falt Calibri};}{\f1519\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic){\*\falt Calibri};}{\f1520\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic{\*\falt Calibri};}
{\f1521\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese){\*\falt Calibri};}{\f1583\fbidi \fmodern\fcharset238\fprq1 Consolas CE{\*\falt Consolas};}{\f1584\fbidi \fmodern\fcharset204\fprq1 Consolas Cyr{\*\falt Consolas};}
{\f1586\fbidi \fmodern\fcharset161\fprq1 Consolas Greek{\*\falt Consolas};}{\f1587\fbidi \fmodern\fcharset162\fprq1 Consolas Tur{\*\falt Consolas};}{\f1590\fbidi \fmodern\fcharset186\fprq1 Consolas Baltic{\*\falt Consolas};}
{\f1591\fbidi \fmodern\fcharset163\fprq1 Consolas (Vietnamese){\*\falt Consolas};}{\f2445\fbidi \fnil\fcharset0\fprq2 @SimSun Western;}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}
{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}
{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}
{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}
{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}
{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}
{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}{\fhimajor\f31533\fbidi \fswiss\fcharset177\fprq2 Calibri Light (Hebrew);}
{\fhimajor\f31534\fbidi \fswiss\fcharset178\fprq2 Calibri Light (Arabic);}{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}
{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}
{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}
{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}
{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}
{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}
{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}
{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}
{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}
{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE{\*\falt Calibri};}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr{\*\falt Calibri};}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek{\*\falt Calibri};}
{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur{\*\falt Calibri};}{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew){\*\falt Calibri};}{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic){\*\falt Calibri};}
{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic{\*\falt Calibri};}{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese){\*\falt Calibri};}
{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}
{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}
{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green0\blue0;\red0\green0\blue0;\red39\green50\blue57;}{\*\defchp \fs22\dbch\af13 }{\*\defpap \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\qj \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs21\alang1025 \ltrch\fcs0 
\fs21\lang1033\langfe16393\kerning2\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp16393 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \sunhideused Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang16393\langfe16393\loch\f0\hich\af0\dbch\af13\cgrid\langnp16393\langfenp16393 \snext11 \ssemihidden \sunhideused 
Normal Table;}{\*\cs15 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \b \sbasedon10 \sqformat Strong;}{\s16\ql \li0\ri0\widctlpar
\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang1033\langfe2052\loch\f13\hich\af13\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext16 \slink17 \sqformat HTML Preformatted;}{\*\cs17 \additive \rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1033\langfe0\kerning2\langnp1033 
\sbasedon10 \slink16 \slocked \ssemihidden HTML Preformatted Char;}}{\*\rsidtbl \rsid1798873\rsid6650326}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\author HP}
{\operator Rupam Mankar}{\creatim\yr2022\mo11\dy12\hr21\min17}{\revtim\yr2022\mo11\dy27\hr20\min11}{\version2}{\edmins1}{\nofpages14}{\nofwords1258}{\nofchars7174}{\nofcharsws8416}{\vern59}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/20
03/wordml}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow1\dgvshow1\jcompress\ksulang1041\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\htmautsp\lyttblrtgr\lnbrkrule\asianbrkrule\rsidroot1798873 {\upr{\*\fchars 
!),.:\'3b?]\'7d\'a8\'b7?\'af-?\'92\'94\'85:????>\'bb?????!"'),.:\'3b?]`|\'7d~?}{\*\ud\uc0{\*\fchars 
!),.:\'3b?]\'7d\'a8\'b7{\uc1\u711 ?\u713 \'af\u8213 -\u8214 ?\'92\'94\'85\u8758 :\u12289 ?\u12290 ?\u12291 ?\u12293 ?\u12297 >\u12299 \'bb\u12301 ?\u12303 ?\u12305 ?\u12309 ?\u12311 ?\u-255 !\u-254 "\u-249 '\u-247 )\u-244 ,\u-242 .\u-230 :\u-229 \'3b\u-225 ?\u-195 ]\u-192 `\u-164 |\u-163 \'7d\u-162 ~\u-32 ?}
}}}{\upr{\*\lchars ([\'7b\'b7\'91\'93<\'ab?????(.[\'7b??}{\*\ud\uc0{\*\lchars ([\'7b\'b7\'91\'93{\uc1\u12296 <\u12298 \'ab\u12300 ?\u12302 ?\u12304 ?\u12308 ?\u12310 ?\u-248 (\u-242 .\u-197 [\u-165 \'7b\u-31 ?\u-27 ?}}}}\fet0{\*\wgrffmtfilter 2450}
\ilfomacatclnup0{\*\ftnsep \ltrpar \pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs21\alang1025 \ltrch\fcs0 \fs21\lang1033\langfe16393\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp16393 {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\kerning0\insrsid6650326 \chftnsep 
\par }}{\*\ftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs21\alang1025 \ltrch\fcs0 \fs21\lang1033\langfe16393\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp16393 {\rtlch\fcs1 
\af0\afs24 \ltrch\fcs0 \fs24\kerning0\insrsid6650326 \chftnsepc 
\par }}{\*\aftnsep \ltrpar \pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs21\alang1025 \ltrch\fcs0 \fs21\lang1033\langfe16393\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp16393 {\rtlch\fcs1 
\af0\afs24 \ltrch\fcs0 \fs24\kerning0\insrsid6650326 \chftnsep 
\par }}{\*\aftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs21\alang1025 \ltrch\fcs0 \fs21\lang1033\langfe16393\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp16393 {\rtlch\fcs1 
\af0\afs24 \ltrch\fcs0 \fs24\kerning0\insrsid6650326 \chftnsepc 
\par }}\ltrpar \sectd \ltrsect\linex0\endnhere\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\qc \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs21\alang1025 \ltrch\fcs0 \fs21\lang1033\langfe16393\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp16393 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 
\f37\fs22\ul\insrsid6650326 +
\par 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\ul\lang9\langfe16393\langnp9\insrsid6650326 Assignment -A1
\par }\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\ul\lang9\langfe16393\langnp9\insrsid6650326 Fibonaccci Series in C++ without Recursion

\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 #include <iostream>  
\par using namespace std;  
\par int main() \{  
\par   int n1=0,n2=1,n3,i,number;    
\par  cout<<"Enter the number of elements: ";    
\par  cin>>number;    
\par  cout<<n1<<" "<<n2<<" "; //printing 0 and 1    
\par  for(i=2;i<number;++i) //loop starts from 2 because 0 and 1 are already printed    
\par  \{    
\par   n3=n1+n2;    
\par   cout<<n3<<" ";    
\par   n1=n2;    
\par   n2=n3;    
\par  \}    
\par    return 0;  
\par    \}  
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 Output:
\par Enter the number of elements: 10
\par 0 1 1 2 3 5 8 13 21 34 
\par ................................................................................................................................................
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\ul\lang9\langfe16393\langnp9\insrsid6650326 Fibonnaci series using recursion in C++
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 #include<iostream>    
\par using namespace std;      
\par void printFibonacci(int n)\{    
\par     static int n1=0, n2=1, n3;    
\par     if(n>0)\{    
\par          n3 = n1 + n2;    
\par          n1 = n2;    
\par          n2 = n3;    
\par  cout<<n3<<" ";    
\par          printFibonacci(n-1);    
\par     \}    
\par \}    
\par int main()\{    
\par     int n;    
\par     cout<<"Enter the number of elements: ";    
\par     cin>>n;    
\par     cout<<"Fibonacci Series: ";    
\par     cout<<"0 "<<"1 ";  
\par     printFibonacci(n-2);  //n-2 because 2 numbers are already printed    
\par      return 0;  
\par \}  
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 Output:
\par Enter the number of elements: 15 
\par  Fibonacci Series: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377
\par .......................................................................................................................................
\par }\pard \ltrpar\qc \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 Assignment No-A2
\par }\pard \ltrpar\qj \li0\ri0\sa200\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 // C++(STL) program for Huffman Coding with STL
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\insrsid6650326 //https://www.geeksforgeeks.org/huffman-coding-greedy-algo-3/
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 // C++(STL) program for Huffman Coding with STL
\par #include <bits/stdc++.h>
\par using namespace std;
\par 
\par // A Huffman tree node
\par struct MinHeapNode \{
\par 
\par \tab // One of the input characters
\par \tab char data;
\par 
\par \tab // Frequency of the character
\par \tab unsigned freq;
\par 
\par \tab // Left and right child
\par \tab MinHeapNode *left, *right;
\par 
\par \tab MinHeapNode(char data, unsigned freq)
\par 
\par \tab \{
\par 
\par \tab \tab left = right = NULL;
\par \tab \tab this->data = data;
\par \tab \tab this->freq = freq;
\par \tab \}
\par \};
\par 
\par // For comparison of
\par // two heap nodes (needed in min heap)
\par struct compare \{
\par 
\par \tab bool operator()(MinHeapNode* l, MinHeapNode* r)
\par 
\par \tab \{
\par \tab \tab return (l->freq > r->freq);//retrun false if we want to swap 
\par \tab \}
\par \};
\par 
\par // Prints huffman codes from
\par // the root of Huffman Tree.
\par void printCodes(struct MinHeapNode* root, string str)
\par \{
\par 
\par \tab if (!root)
\par \tab \tab return;
\par 
\par \tab if (root->data != '$')
\par \tab \tab cout << root->data << ": " << str << "\\n";
\par 
\par \tab printCodes(root->left, str + "0");
\par \tab printCodes(root->right, str + "1");
\par \}
\par 
\par // The main function that builds a Huffman Tree and
\par // print codes by traversing the built Huffman Tree
\par void HuffmanCodes(char data[], int freq[], int size)
\par \{
\par \tab struct MinHeapNode *left, *right, *top;
\par 
\par \tab // Create a min heap & inserts all characters of data[]
\par \tab priority_queue<MinHeapNode*, vector<MinHeapNode*>, compare> minHeap;
\par \tab //minHeap[5, 9, 12, 13, 16, 45]
\par 
\par \tab for (int i = 0; i < size; ++i)
\par \tab \tab minHeap.push(new MinHeapNode(data[i], freq[i]));
\par 
\par \tab // Iterate while size of heap doesn't become 1
\par \tab while (minHeap.size() != 1) \{
\par 
\par \tab \tab // Extract the two minimum
\par \tab \tab // freq items from min heap
\par \tab \tab //minHeap[5, 9, 12, 13, 16, 45]
\par \tab \tab left = minHeap.top();//address of node  5
\par \tab \tab minHeap.pop();
\par \tab //minHeap[9, 12, 13, 16, 45]
\par \tab \tab right = minHeap.top();//adrress of node 9
\par \tab \tab minHeap.pop();
\par 
\par \tab \tab // Create a new internal node with
\par \tab \tab // frequency equal to the sum of the
\par \tab \tab // two nodes frequencies. Make the
\par \tab \tab // two extracted node as left and right children
\par \tab \tab // of this new node. Add this node
\par \tab \tab // to the min heap '$' is a special value
\par \tab \tab // for internal nodes, not used
\par \tab \tab top = new MinHeapNode('$', left->freq + right->freq);
\par 
\par \tab \tab top->left = left;
\par \tab \tab top->right = right;
\par 
\par \tab \tab minHeap.push(top);//after push back in queue it will automatically go to its original position in sorting order
\par \tab \}
\par 
\par \tab // Print Huffman codes using
\par \tab // the Huffman tree built above
\par \tab printCodes(minHeap.top(), "");
\par \}
\par 
\par // Driver Code
\par int main()
\par \{
\par 
\par \tab char arr[] = \{ 'a', 'b', 'c', 'd', 'e', 'f' \};
\par \tab int freq[] = \{ 5, 9, 12, 13, 16, 45\};
\par 
\par \tab int size = sizeof(arr) / sizeof(arr[0]);
\par 
\par \tab HuffmanCodes(arr, freq, size);
\par 
\par \tab return 0;
\par \}
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 
\par // This code is contributed by Aditya Goel
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af43\afs20\alang1 \ltrch\fcs0 
\cs15\b\f43\fs20\expnd0\expndtw2\cf19\lang1033\langfe2052\kerning0\chshdng0\chcfpat0\chcbpat8\langfenp2052\insrsid6650326 Output}{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \insrsid6650326 
\par }\pard\plain \ltrpar\s16\ql \li0\ri0\sa120\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\wrapdefault\aspalpha\aspnum\faroman\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe2052\loch\af13\hich\af13\dbch\af13\cgrid\langnp1033\langfenp2052 {\rtlch\fcs1 \af44\alang1 \ltrch\fcs0 \f44\expnd0\expndtw2\cf19\insrsid6650326 f: 0
\par c: 100
\par d: 101
\par a: 1100
\par b: 1101
\par e: 111
\par }\pard\plain \ltrpar\qj \li0\ri0\sa200\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs21\alang1025 \ltrch\fcs0 \fs21\lang1033\langfe16393\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp16393 {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 ...............................................................................................................................
\par }\pard \ltrpar\qc \li0\ri0\sa200\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 Assignment No- 3
\par }\pard \ltrpar\qj \li0\ri0\sa200\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 // C++ program to solve fractional Knapsack Problem
\par 
\par #include <bits/stdc++.h>
\par using namespace std;
\par 
\par // Structure for an item which stores weight and
\par // corresponding value of Item
\par struct Item \{
\par \tab int value, weight;
\par 
\par \tab // Constructor
\par \tab Item(int value, int weight)
\par \tab \{
\par \tab \tab this->value = value;
\par \tab \tab this->weight = weight;
\par \tab \}
\par \};
\par 
\par // Comparison function to sort Item
\par // according to val/weight ratio
\par bool cmp(struct Item a, struct Item b)
\par \{
\par \tab double r1 = (double)a.value / (double)a.weight;
\par \tab double r2 = (double)b.value / (double)b.weight;
\par \tab return r1 > r2;
\par \}
\par 
\par // Main greedy function to solve problem
\par double fractionalKnapsack(int W, struct Item arr[], int N)
\par \{
\par \tab // Sorting Item on basis of ratio
\par \tab sort(arr, arr + N, cmp);
\par 
\par \tab double finalvalue = 0.0;
\par 
\par \tab // Looping through all items
\par \tab for (int i = 0; i < N; i++) \{
\par \tab \tab 
\par \tab \tab // If adding Item won't overflow,
\par \tab \tab // add it completely
\par \tab \tab if (arr[i].weight <= W) \{
\par \tab \tab \tab W -= arr[i].weight;
\par \tab \tab \tab finalvalue += arr[i].value;
\par \tab \tab \}
\par 
\par \tab \tab // If we can't add current Item,
\par \tab \tab // add fractional part of it
\par \tab \tab else \{
\par \tab \tab \tab finalvalue
\par \tab \tab \tab \tab += arr[i].value
\par \tab \tab \tab \tab * ((double)W / (double)arr[i].weight);
\par \tab \tab \tab break;
\par \tab \tab \}
\par \tab \}
\par 
\par \tab // Returning final value
\par \tab return finalvalue;
\par \}
\par 
\par // Driver code
\par int main()
\par \{
\par \tab int W = 50;
\par \tab Item arr[] = \{ \{ 60, 10 \}, \{ 100, 20 \}, \{ 120, 30 \} \};
\par 
\par \tab int N = sizeof(arr) / sizeof(arr[0]);
\par 
\par \tab // Function call
\par \tab cout << fractionalKnapsack(W, arr, N);
\par \tab return 0;
\par \}
\par 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 Output
\par Maximum value we can obtain = 240
\par ................................................................................................................................................
\par }\pard \ltrpar\qc \li0\ri0\sa200\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 Assignment No- 4
\par }\pard \ltrpar\qj \li0\ri0\sa200\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1798873 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid1798873\charrsid1798873 
/* C++ program to solve N Queen Problem using
\par backtracking */
\par 
\par #include <bits/stdc++.h>
\par #define N 4
\par using namespace std;
\par 
\par /* A utility function to print solution */
\par void printSolution(int board[N][N])
\par \{
\par \tab for (int i = 0; i < N; i++) \{
\par \tab \tab for (int j = 0; j < N; j++)
\par \tab \tab \tab cout << " " << board[i][j] << " ";
\par \tab \tab printf("\\n");
\par \tab \}
\par \}
\par 
\par /* A utility function to check if a queen can
\par be placed on board[row][col]. Note that this
\par function is called when "col" queens are
\par already placed in columns from 0 to col -1.
\par So we need to check only left side for
\par attacking queens */
\par bool isSafe(int board[N][N], int row, int col)
\par \{
\par \tab int i, j;
\par 
\par \tab /* Check this row on left side */
\par \tab for (i = 0; i < col; i++)
\par \tab \tab if (board[row][i])
\par \tab \tab \tab return false;
\par 
\par \tab /* Check upper diagonal on left side */
\par \tab for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
\par \tab \tab if (board[i][j])
\par \tab \tab \tab return false;
\par 
\par \tab /* Check lower diagonal on left side */
\par \tab for (i = row, j = col; j >= 0 && i < N; i++, j--)
\par \tab \tab if (board[i][j])
\par \tab \tab \tab return false;
\par 
\par \tab return true;
\par \}
\par 
\par /* A recursive utility function to solve N
\par Queen problem */
\par bool solveNQUtil(int board[N][N], int col)
\par \{
\par \tab /* base case: If all queens are placed
\par \tab then return true */
\par \tab if (col >= N)
\par \tab \tab return true;
\par 
\par \tab /* Consider this column and try placing
\par \tab this queen in all rows one by one */
\par \tab for (int i = 0; i < N; i++) \{
\par \tab \tab /* Check if the queen can be placed on
\par \tab \tab board[i][col] */
\par \tab \tab if (isSafe(board, i, col)) \{
\par \tab \tab \tab /* Place this queen in board[i][col] */
\par \tab \tab \tab board[i][col] = 1;
\par 
\par \tab \tab \tab /* recur to place rest of the queens */
\par \tab \tab \tab if (solveNQUtil(board, col + 1))
\par \tab \tab \tab \tab return true;
\par 
\par \tab \tab \tab /* If placing queen in board[i][col]
\par \tab \tab \tab doesn't lead to a solution, then
\par \tab \tab \tab remove queen from board[i][col] */
\par \tab \tab \tab board[i][col] = 0; // BACKTRACK
\par \tab \tab \}
\par \tab \}
\par 
\par \tab /* If the queen cannot be placed in any row in
\par \tab \tab this column col then return false */
\par \tab return false;
\par \}
\par 
\par /* This function solves the N Queen problem using
\par Backtracking. It mainly uses solveNQUtil() to
\par solve the problem. It returns false if queens
\par cannot be placed, otherwise, return true and
\par prints placement of queens in the form of 1s.
\par Please note that there may be more than one
\par solutions, this function prints one of the
\par feasible solutions.*/
\par bool solveNQ()
\par \{
\par \tab int board[N][N] = \{ \{ 0, 0, 0, 0 \},
\par \tab \tab \tab \tab \tab \tab \{ 0, 0, 0, 0 \},
\par \tab \tab \tab \tab \tab \tab \{ 0, 0, 0, 0 \},
\par \tab \tab \tab \tab \tab \tab \{ 0, 0, 0, 0 \} \};
\par 
\par \tab if (solveNQUtil(board, 0) == false) \{
\par \tab \tab cout << "Solution does not exist";
\par \tab \tab return false;
\par \tab \}
\par 
\par \tab printSolution(board);
\par \tab return true;
\par \}
\par 
\par // driver program to test above function
\par int main()
\par \{
\par \tab solveNQ();
\par \tab return 0;
\par \}
\par 
\par // This code is contributed by Aditya Kumar (adityakumar129)}{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 
\par }\pard \ltrpar\qj \li0\ri0\sa200\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f37\fs22\lang9\langfe16393\langnp9\insrsid6650326 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b030414000600080000002100b6f4679893070000c9200000160000007468656d652f7468656d652f
7468656d65312e786d6cec59cd8b1bc915bf07f23f347d97f5d5ad8fc1f2a24fcfda33b6b164873dd648a5eef2547789aad28cc56208de532e81c026e49085bd
ed21842cecc22eb9e48f31d8249b3f22afaa5bdd5552c99e191c3061463074977eefd5afde7bf5de53d5ddcf5e26d4bbc05c1096f6fcfa9d9aefe174ce16248d
7afeb3d9a4d2f13d2151ba4094a5b8e76fb0f03fbbf7eb5fdd454732c609f6403e1547a8e7c752ae8eaa5531876124eeb0154ee1bb25e30992f0caa3ea82a34b
d09bd06aa3566b55134452df4b51026a1f2f97648ebd9952e9dfdb2a1f53784da5500373caa74a35b6243476715e5708b11143cabd0b447b3eccb3609733fc52
fa1e4542c2173dbfa6fffceabdbb5574940b517940d6909be8bf5c2e17589c37f49c3c3a2b260d823068f50bfd1a40e53e6edc1eb7c6ad429f06a0f91c569a71
b175b61bc320c71aa0ecd1a17bd41e35eb16ded0dfdce3dc0fd5c7c26b50a63fd8c34f2643b0a285d7a00c1feee1c3417730b2f56b50866fede1dbb5fe28685b
fa3528a6243ddf43d7c25673b85d6d0159327aec8477c360d26ee4ca4b144443115d6a8a254be5a1584bd00bc6270050408a24493db959e1259a43140f112567
9c7827248a21f056286502866b8ddaa4d684ffea13e827ed5174849121ad780113b137a4f87862cec94af6fc07a0d537206f7ffef9cdeb1fdfbcfee9cd575fbd
79fdf77c6eadca923b466964cafdf2dd1ffef3cd6fbd7ffff0ed2f5fff319b7a172f4cfcbbbffdeedd3ffef93ef5b0e2d2146ffff4fdbb1fbf7ffbe7dfffebaf
5f3bb4f7393a33e1339260e13dc297de5396c0021dfcf119bf9ec42c46c494e8a791402952b338f48f656ca11f6d10450edc00db767cce21d5b880f7d72f2cc2
d398af2571687c182716f094313a60dc6985876a2ec3ccb3751ab927e76b13f714a10bd7dc43945a5e1eaf579063894be530c616cd2714a5124538c5d253dfb1
738c1dabfb8210cbaea764ce99604be97d41bc01224e93ccc899154da5d03149c02f1b1741f0b7659bd3e7de8051d7aa47f8c246c2de40d4417e86a965c6fb68
2d51e252394309350d7e8264ec2239ddf0b9891b0b099e8e3065de78818570c93ce6b05ec3e90f21cdb8dd7e4a37898de4929cbb749e20c64ce4889d0f6394ac
5cd829496313fbb938871045de13265df05366ef10f50e7e40e941773f27d872f787b3c133c8b026a53240d4376beef0e57dccacf89d6ee8126157aae9f3c44a
b17d4e9cd131584756689f604cd1255a60ec3dfbdcc160c05696cd4bd20f62c82ac7d815580f901dabea3dc5027a25d5dcece7c91322ac909de2881de073bad9
493c1b9426881fd2fc08bc6eda7c0ca52e7105c0633a3f37818f08f480102f4ea33c16a0c308ee835a9fc4c82a60ea5db8e375c32dff5d658fc1be7c61d1b8c2
be04197c6d1948eca6cc7b6d3343d49aa00c9819822ec3956e41c4727f29a28aab165b3be596f6a62ddd00dd91d5f42424fd6007b4d3fb84ffbbde073a8cb77f
f9c6b10f3e4ebfe3566c25ab6b763a8792c9f14e7f7308b7dbd50c195f904fbfa919a175fa04431dd9cf58b73dcd6d4fe3ffdff73487f6f36d2773a8dfb8ed64
7ce8306e3b99fc70e5e3743265f3027d8d3af0c80e7af4b14f72f0d46749289dca0dc527421ffc08f83db398c0a092d3279eb838055cc5f0a8ca1c4c60e1228e
b48cc799fc0d91f134462b381daafb4a492472d591f0564cc0a1911e76ea5678ba4e4ed9223becacd7d5c16656590592e5782d2cc6e1a04a66e856bb3cc02bd4
6bb6913e68dd1250b2d721614c6693683a48b4b783ca48fa58178ce620a157f65158741d2c3a4afdd6557b2c805ae115f8c1edc1cff49e1f06200242701e07cd
f942f92973f5d6bbda991fd3d3878c69450034d8db08283ddd555c0f2e4fad2e0bb52b78da2261849b4d425b46377822869fc17974aad1abd0b8aeafbba54b2d
7aca147a3e08ad9246bbf33e1637f535c8ede6069a9a9982a6de65cf6f35430899395af5fc251c1ac363b282d811ea3717a211dcbccc25cf36fc4d32cb8a0b39
4222ce0cae934e960d122231f728497abe5a7ee1069aea1ca2b9d51b90103e59725d482b9f1a3970baed64bc5ce2b934dd6e8c284b67af90e1b35ce1fc568bdf
1cac24d91adc3d8d1797de195df3a708422c6cd795011744c0dd413db3e682c0655891c8caf8db294c79da356fa3740c65e388ae62945714339967709dca0b3a
faadb081f196af190c6a98242f8467912ab0a651ad6a5a548d8cc3c1aafb6121653923699635d3ca2aaa6abab39835c3b60cecd8f26645de60b53531e434b3c2
67a97b37e576b7b96ea74f28aa0418bcb09fa3ea5ea12018d4cac92c6a8af17e1a56393b1fb56bc776811fa07695226164fdd656ed8edd8a1ae19c0e066f54f9
416e376a6168b9ed2bb5a5f5adb979b1cdce5e40f2184197bba6526857c2c92e47d0104d754f92a50dd8222f65be35e0c95b73d2f3bfac85fd60d80887955a27
1c57826650ab74c27eb3d20fc3667d1cd66ba341e31514161927f530bbb19fc00506dde4f7f67a7cefee3ed9ded1dc99b3a4caf4dd7c5513d777f7f5c6e1bb7b
8f40d2f9b2d598749bdd41abd26df627956034e854bac3d6a0326a0ddba3c9681876ba9357be77a1c141bf390c5ae34ea5551f0e2b41aba6e877ba9576d068f4
8376bf330efaaff23606569ea58fdc16605ecdebde7f010000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d65
2f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d36
3f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e
3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d985
0528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c020000130000000000000000000000
0000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b00000000000000000000
000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c0000000000000000000000000019020000
7468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d0014000600080000002100b6f4679893070000c92000001600000000000000
000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b01000027000000
000000000000000000009d0a00007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000980b00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax376\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef1\lsdprioritydef99{\lsdlockedexcept \lsdpriority0 \lsdlocked0 Normal;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 caption;
\lsdunhideused1 \lsdqformat0 \lsdlocked0 Default Paragraph Font;\lsdqformat0 \lsdlocked0 HTML Top of Form;\lsdqformat0 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdlocked0 No List;
\lsdqformat0 \lsdlocked0 Outline List 1;\lsdqformat0 \lsdlocked0 Outline List 2;\lsdqformat0 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Contemporary;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Elegant;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Professional;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 1;\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdlocked0 Placeholder Text;\lsdqformat0 \lsdlocked0 Revision;\lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdpriority31 \lsdlocked0 Subtle Reference;\lsdpriority32 \lsdlocked0 Intense Reference;\lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdqformat0 \lsdpriority41 \lsdlocked0 Plain Table 1;\lsdqformat0 \lsdpriority42 \lsdlocked0 Plain Table 2;\lsdqformat0 \lsdpriority43 \lsdlocked0 Plain Table 3;
\lsdqformat0 \lsdpriority44 \lsdlocked0 Plain Table 4;\lsdqformat0 \lsdpriority45 \lsdlocked0 Plain Table 5;\lsdqformat0 \lsdpriority40 \lsdlocked0 Grid Table Light;\lsdqformat0 \lsdpriority46 \lsdlocked0 Grid Table 1 Light;
\lsdqformat0 \lsdpriority47 \lsdlocked0 Grid Table 2;\lsdqformat0 \lsdpriority48 \lsdlocked0 Grid Table 3;\lsdqformat0 \lsdpriority49 \lsdlocked0 Grid Table 4;\lsdqformat0 \lsdpriority50 \lsdlocked0 Grid Table 5 Dark;
\lsdqformat0 \lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdqformat0 \lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdqformat0 \lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdqformat0 \lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdqformat0 \lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdqformat0 \lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdqformat0 \lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;
\lsdqformat0 \lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;\lsdqformat0 \lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdqformat0 \lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;
\lsdqformat0 \lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdqformat0 \lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;\lsdqformat0 \lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdqformat0 \lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;
\lsdqformat0 \lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdqformat0 \lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;\lsdqformat0 \lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;
\lsdqformat0 \lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdqformat0 \lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdqformat0 \lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;\lsdqformat0 \lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;
\lsdqformat0 \lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdqformat0 \lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdqformat0 \lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdqformat0 \lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdqformat0 \lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdqformat0 \lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdqformat0 \lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdqformat0 \lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdqformat0 \lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdqformat0 \lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;
\lsdqformat0 \lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;\lsdqformat0 \lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdqformat0 \lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdqformat0 \lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;
\lsdqformat0 \lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;\lsdqformat0 \lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdqformat0 \lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;
\lsdqformat0 \lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdqformat0 \lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;\lsdqformat0 \lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdqformat0 \lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;
\lsdqformat0 \lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdqformat0 \lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;\lsdqformat0 \lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdqformat0 \lsdpriority47 \lsdlocked0 List Table 2;
\lsdqformat0 \lsdpriority48 \lsdlocked0 List Table 3;\lsdqformat0 \lsdpriority49 \lsdlocked0 List Table 4;\lsdqformat0 \lsdpriority50 \lsdlocked0 List Table 5 Dark;\lsdqformat0 \lsdpriority51 \lsdlocked0 List Table 6 Colorful;
\lsdqformat0 \lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdqformat0 \lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdqformat0 \lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdqformat0 \lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdqformat0 \lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdqformat0 \lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdqformat0 \lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;
\lsdqformat0 \lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;\lsdqformat0 \lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdqformat0 \lsdpriority47 \lsdlocked0 List Table 2 Accent 2;
\lsdqformat0 \lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdqformat0 \lsdpriority49 \lsdlocked0 List Table 4 Accent 2;\lsdqformat0 \lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;
\lsdqformat0 \lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdqformat0 \lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdqformat0 \lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdqformat0 \lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdqformat0 \lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdqformat0 \lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdqformat0 \lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdqformat0 \lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdqformat0 \lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdqformat0 \lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;
\lsdqformat0 \lsdpriority47 \lsdlocked0 List Table 2 Accent 4;\lsdqformat0 \lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdqformat0 \lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdqformat0 \lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;
\lsdqformat0 \lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;\lsdqformat0 \lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdqformat0 \lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;
\lsdqformat0 \lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdqformat0 \lsdpriority48 \lsdlocked0 List Table 3 Accent 5;\lsdqformat0 \lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdqformat0 \lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;
\lsdqformat0 \lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdqformat0 \lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;\lsdqformat0 \lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;
\lsdqformat0 \lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdqformat0 \lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdqformat0 \lsdpriority49 \lsdlocked0 List Table 4 Accent 6;\lsdqformat0 \lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;
\lsdqformat0 \lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdqformat0 \lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdlocked0 Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdlocked0 Smart Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdlocked0 Hashtag;\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdlocked0 Unresolved Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat0 \lsdlocked0 Smart Link;}}{\*\datastore 0105000002000000180000004d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e5000000000000000000000000b0ed
a44e6e02d901feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}